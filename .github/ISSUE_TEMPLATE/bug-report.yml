name: "Bug: "
description: Report a problem or unexpected behaviour
labels: [bug]
body:
  - type: textarea
    attributes:
      label: "Description"
      description: "Description of the problem you are facing"
    validations:
      required: true
  - type: input
    attributes:
      label: "Operating system"
      placeholder: "Ubuntu 22.04.4"
    validations:
      required: true
  - type: textarea
    attributes:
      label: "Neovim version"
      description: "`nvim -v`"
      render: markdown
      placeholder: |
        NVIM v0.10.0-dev-2671+gdc110cba3
        Build type: RelWithDebInfo
        LuaJIT 2.1.1710088188
    validations:
      required: true
  - type: textarea
    attributes:
      label: "Steps to reproduce"
      description: "Steps to reproduce the issue with the minimal configuration"
      placeholder: |
        1. `nvim -nu init.lua`
        2. ...
    validations:
      required: true
  - type: textarea
    attributes:
      label: "Expected behavior"
      description: "What you expected to happen"
  - type: textarea
    attributes:
      label: "Actual behavior"
      description: "What actually happens. You may include any relevant logs, screenshots, etc."
  - type: textarea
    attributes:
       label: "Minimal configuration"
       description: "Minimal configuration to reproduce the issue"
       render: Lua
       value: |
        local lazypath = vim.fn.stdpath('data') .. '/lazy/lazy.nvim'
        if not (vim.uv or vim.loop).fs_stat(lazypath) then
          vim.fn.system({
            'git',
            'clone',
            '--filter=blob:none',
            'https://github.com/folke/lazy.nvim.git',
            '--branch=stable',
            lazypath,
          })
        end
        vim.opt.rtp:prepend(lazypath)

        require('lazy').setup({
          {
            'vyfor/cord.nvim',
            build = './build',
            opts = {
              usercmds = true,                              -- Enable user commands
              timer = {
                enable = true,                              -- Enable automatically updating presence
                interval = 1500,                            -- Interval between presence updates in milliseconds (min 500)
                reset_on_idle = false,                      -- Reset start timestamp on idle
                reset_on_change = false,                    -- Reset start timestamp on presence change
              },
              editor = {
                image = nil,                                -- Image ID or URL in case a custom client id is provided
                client = 'neovim',                          -- vim, neovim, lunarvim, nvchad, astronvim or your application's client id
                tooltip = 'The Superior Text Editor',       -- Text to display when hovering over the editor's image
              },
              display = {
                show_time = true,                           -- Display start timestamp
                show_repository = true,                     -- Display 'View repository' button linked to repository url, if any
                show_cursor_position = true,                -- Display line and column number of cursor's position
                swap_fields = false,                        -- If enabled, workspace is displayed first
                workspace_blacklist = {},                   -- List of workspace names to hide
              },
              lsp = {
                show_problem_count = false,                 -- Display number of diagnostics problems
                severity = 1,                               -- 1 = Error, 2 = Warning, 3 = Info, 4 = Hint
                scope = 'workspace',                        -- buffer or workspace
              },
              idle = {
                show_idle = true,                           -- Enable idle status
                timeout = 300000,                           -- Timeout in milliseconds after which the idle status is set, 0 to display immediately
                disable_on_focus = true,                    -- Do not display idle status when neovim is focused
                text = 'Idle',                              -- Text to display when idle
                tooltip = 'ðŸ’¤',                             -- Text to display when hovering over the idle image
              },
              text = {
                viewing = 'Viewing {}',                     -- Text to display when viewing a readonly file
                editing = 'Editing {}',                     -- Text to display when editing a file
                file_browser = 'Browsing files in {}',      -- Text to display when browsing files (Empty string to disable)
                plugin_manager = 'Managing plugins in {}',  -- Text to display when managing plugins (Empty string to disable)
                workspace = 'In {}',                        -- Text to display when in a workspace (Empty string to disable)
              },
              buttons = {
                {
                  label = 'View repository',                -- Text displayed on the button
                  url = 'git',                              -- URL where the button leads to ('git' = Git repository URL)
                },
                -- {
                --   label = 'View plugin',
                --   url = 'https://github.com/vyfor/cord.nvim',
                -- }
              },
            },
          },
        }, {})
validations:
required: true